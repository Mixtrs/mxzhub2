local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "DribbleBoyz",
    Icon = 0,  -- No icon
    LoadingTitle = "Rayfield Interface Suite",
    LoadingSubtitle = "by Sirius",
    Theme = "Amethyst",  -- You can customize themes
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "MXZ", -- Custom folder name
        FileName = "HUB"
    },
    KeySystem = false,  -- If you need a key system
    KeySettings = {
        Title = "Key System",
        Subtitle = "Enter your key",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        Key = {"Muzz"}  -- The accepted key for the system
    }
})

-- Create tabs
local TabMain = Window:CreateTab("Main", "rewind")

-- Variables
local accelerationEnabled = false
local accelerationAmount = 0
local baseWaitTimer = 0
local minSpeed = 16
local maxSpeed = 50
local waitTimer = baseWaitTimer
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local moveDirConnection

-- Function to apply acceleration
local function applyAcceleration()
    if accelerationEnabled then
        if moveDirConnection then moveDirConnection:Disconnect() end
        local moveDirDB = false

        local function accelerate()
            if humanoid.MoveDirection.magnitude > 0 and not moveDirDB and humanoid.WalkSpeed < maxSpeed then
                moveDirDB = true
                -- Start accelerating immediately using deltaTime for smoothness
                while humanoid.MoveDirection.magnitude > 0 and humanoid.WalkSpeed < maxSpeed do
                    local deltaTime = task.wait()  -- Get the time elapsed since the last frame
                    humanoid.WalkSpeed = humanoid.WalkSpeed + (accelerationAmount * deltaTime)
                end
                moveDirDB = false
            elseif humanoid.MoveDirection.magnitude == 0 then
                -- Reset WalkSpeed if no movement
                humanoid.WalkSpeed = minSpeed
            end
        end

        moveDirConnection = humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(accelerate)
    else
        if moveDirConnection then moveDirConnection:Disconnect() end
        humanoid.WalkSpeed = minSpeed
    end
end


local Toggle = TabMain:CreateToggle({
    Name = "Enable Acceleration",
    CurrentValue = false,
    Flag = "Toggle2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(value)
        accelerationEnabled = value
        applyAcceleration()
    end
})

local Slider = TabMain:CreateSlider({
    Name = "Acceleration",
    Range = {0, 100},
    Increment = 1,
    Suffix = "Units", -- Optional: change this to suit your preference
    CurrentValue = accelerationAmount, -- Use the default acceleration amount here
    Flag = "AccelerationSlider", -- Ensure this is unique if saving configuration
    Callback = function(value)
        if accelerationEnabled then
            accelerationAmount = value
        end
    end,
})

local Button = TabSettings:CreateButton({
    Name = "Exit Hub",
    Callback = function()
        Rayfield:Destroy()  -- To destroy the Rayfield window
    end
})

