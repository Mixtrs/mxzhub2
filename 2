-- Load the MXZ Library
local MXZLIB = loadstring(game:HttpGet(('https://raw.githubusercontent.com/Mixtrs/mxz/main/ui')))()
local Window = MXZLIB:MakeWindow({
    Name = "Muzz",
    HidePremium = false,
    IntroIcon = "rbxassetid://7733715400",
    IntroText = "Gangland",
    SaveConfig = true,
    ConfigFolder = "MXZTEST"
})

-- Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Tabs
local AimbotTab = Window:MakeTab({
    Name = "Aimbot",
    Icon = "rbxassetid://7743872758",
    PremiumOnly = false
})

local ESPTab = Window:MakeTab({
    Name = "Visual",
    Icon = "rbxassetid://7734068321",
    PremiumOnly = false
})

local TeleportTab = Window:MakeTab({
    Name = "Teleport",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local OtherTab = Window:MakeTab({
    Name = "Other",
    Icon = "rbxassetid://7734051052",
    PremiumOnly = false
})

local UnloadTab = Window:MakeTab({
    Name = "Unload Menu",
    Icon = "rbxassetid://7733992677",
    PremiumOnly = false
})

-- Variables for Aimbot and FOV
local aimbotEnabled = false
local aimAtPart = "Head"
local aiming = false
local shortestDistance = 100
local FOVRadius = 100
local FOVCircle

-- FOV Circle Settings
FOVCircle = Drawing.new("Circle")
FOVCircle.Visible = true
FOVCircle.Thickness = 1
FOVCircle.Filled = false
FOVCircle.Color = Color3.fromRGB(255, 0, 0)
FOVCircle.Transparency = 0.5
FOVCircle.NumSides = 60
FOVCircle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)

-- Function to update FOV Circle
local function updateFOVCircle()
    FOVCircle.Radius = FOVRadius
end

-- Function to get the closest player within FOV
local function getClosestPlayer()
    local closestPlayer = nil
    local minDistance = shortestDistance

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local targetRoot = player.Character.HumanoidRootPart
            local screenPoint, onScreen = workspace.CurrentCamera:WorldToScreenPoint(targetRoot.Position)
            local distFromCenter = (Vector2.new(screenPoint.X, screenPoint.Y) - FOVCircle.Position).Magnitude

            -- Check if player is within FOV radius and is closest
            if onScreen and distFromCenter < FOVRadius and distFromCenter < minDistance then
                closestPlayer = player
                minDistance = distFromCenter
            end
        end
    end

    return closestPlayer
end

-- Function to smoothly aim at target
local function aimAtTarget()
    RunService.RenderStepped:Connect(function()
        if aimbotEnabled and aiming then
            local targetPlayer = getClosestPlayer()
            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild(aimAtPart) then
                local targetPosition = targetPlayer.Character[aimAtPart].Position
                workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, targetPosition)
            end
        end
    end)
end

-- GUI Elements for Aimbot
AimbotTab:AddToggle({
    Name = "Enable Aimbot",
    Default = false,
    Callback = function(Value)
        aimbotEnabled = Value
        aiming = Value
        FOVCircle.Visible = Value -- Show FOV circle only when aimbot is enabled
        if aimbotEnabled then aimAtTarget() end
    end
})

AimbotTab:AddSlider({
    Name = "Aimbot Distance",
    Min = 50,
    Max = 1000,
    Default = 100,
    Callback = function(Value)
        shortestDistance = Value
    end
})

AimbotTab:AddButton({
    Name = "Switch Aim Part",
    Callback = function()
        aimAtPart = (aimAtPart == "Head") and "HumanoidRootPart" or "Head"
        MXZLIB:MakeNotification({
            Name = "Aim Part Switched",
            Content = "Now aiming at: " .. aimAtPart,
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
})

-- GUI Elements for FOV Circle Customization
AimbotTab:AddSlider({
    Name = "FOV Radius",
    Min = 50,
    Max = 500,
    Default = FOVRadius,
    Callback = function(Value)
        FOVRadius = Value
        updateFOVCircle()
    end
})

AimbotTab:AddColorPicker({
    Name = "FOV Color",
    Default = FOVCircle.Color,
    Callback = function(Color)
        FOVCircle.Color = Color
    end
})

AimbotTab:AddToggle({
    Name = "Show FOV Circle",
    Default = true,
    Callback = function(Value)
        FOVCircle.Visible = Value
    end
})

AimbotTab:AddSlider({
    Name = "FOV Circle Transparency",
    Min = 0,
    Max = 1,
    Default = FOVCircle.Transparency,
    Callback = function(Value)
        FOVCircle.Transparency = Value
    end
})

-- Input Detection for Aimbot Activation
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if aimbotEnabled and input.UserInputType == Enum.UserInputType.MouseButton2 then
        aiming = true
    end
end)

UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        aiming = false
    end
end)

-- ESP Toggle
local ESPEnabled = false
local function toggleESP(enabled)
    local CoreGui = game:GetService("CoreGui")
    local espFolder = CoreGui:FindFirstChild("ESP_Storage") or Instance.new("Folder", CoreGui)
    espFolder.Name = "ESP_Storage"
    
    if enabled then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                local highlight = Instance.new("Highlight")
                highlight.Parent = espFolder
                highlight.Adornee = player.Character
                highlight.FillColor = Color3.new(1, 1, 1)
                highlight.OutlineColor = Color3.new(0, 1, 1)
                highlight.FillTransparency = 1
                highlight.OutlineTransparency = 0.5
            end
        end
    else
        espFolder:ClearAllChildren()
    end
end

ESPTab:AddToggle({
    Name = "Enable ESP",
    Default = false,
    Callback = function(Value)
        ESPEnabled = Value
        toggleESP(ESPEnabled)
    end
})

-- Teleport Options
local selectedPlayerName = ""
local function teleportToPlayer()
    local targetPlayer = Players:FindFirstChild(selectedPlayerName)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
    else
        MXZLIB:MakeNotification({
            Name = "Error",
            Content = "Player not found or not fully loaded!",
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
end

local function refreshPlayerList()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(playerNames, player.Name)
        end
    end
    return playerNames
end

TeleportTab:AddDropdown({
    Name = "Select Player",
    Default = "",
    Options = refreshPlayerList(),
    Callback = function(selected)
        selectedPlayerName = selected
    end
})

TeleportTab:AddButton({
    Name = "Refresh Player List",
    Callback = function()
        TeleportTab:SetOptions(refreshPlayerList())
    end
})

TeleportTab:AddButton({
    Name = "Teleport to Selected Player",
    Callback = function()
        teleportToPlayer()
    end
})

-- Acceleration Toggle and Slider
local accelerationEnabled = false
local accelerationAmount = 0
local function applyAcceleration()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    
    if accelerationEnabled then
        humanoid.WalkSpeed = 16 + accelerationAmount
    else
        humanoid.WalkSpeed = 16
    end
end

OtherTab:AddToggle({
    Name = "Enable Acceleration",
    Default = false,
    Callback = function(Value)
        accelerationEnabled = Value
        applyAcceleration()
    end
})

OtherTab:AddSlider({
    Name = "Acceleration Amount",
    Min = 0,
    Max = 50,
    Default = 0,
    Callback = function(Value)
        accelerationAmount = Value
        applyAcceleration()
    end
})

-- Unload Menu Button
UnloadTab:AddButton({
    Name = "Unload Menu",
    Callback = function()
        MXZLIB:Destroy()
    end
})

-- Initialize the MXZ Library
MXZLIB:Init()
