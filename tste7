local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "My Game",
    Icon = "rbxassetid://6023426938", -- Optional Icon
    LoadingTitle = "Loading...",
    LoadingSubtitle = "by Developer",
    Theme = "Sky",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "MyGameFolder",
        FileName = "Config"
    }
})

local Tab = Window:CreateTab("Main Tab", "rbxassetid://6023426927")  -- Creates a tab

-- Notification Example
Rayfield:Notify({
   Title = "Notification Title",
   Content = "This is a notification example.",
   Duration = 6.5,  -- Duration for notification display
   Image = "rbxassetid://6023426938",  -- Optional Image
})

-- Button Example
local Button = Tab:CreateButton({
   Name = "Button Example",  -- Button name
   Callback = function()
       -- Action to take when button is pressed
       Rayfield:Notify({
           Title = "Button Pressed!",
           Content = "You pressed the button.",
           Duration = 4,
           Image = "rbxassetid://6023426938",
       })
   end,
})

Button:Set("Button Example")  -- Set the button's text label

-- Toggle Example
local Toggle = Tab:CreateToggle({
   Name = "Toggle Example",  -- Toggle name
   CurrentValue = false,  -- Initial state (false means off)
   Flag = "Toggle1",  -- Unique flag to save the toggle state
   Callback = function(Value)
       -- Action to take when toggle is pressed
       if Value then
           Rayfield:Notify({
               Title = "Toggle On",
               Content = "The toggle is now ON!",
               Duration = 4,
               Image = "rbxassetid://6023426938",
           })
       else
           Rayfield:Notify({
               Title = "Toggle Off",
               Content = "The toggle is now OFF.",
               Duration = 4,
               Image = "rbxassetid://6023426938",
           })
       end
   end,
})

Toggle:Set(false)  -- Set the toggle to its initial state (false)

-- Slider Example
local Slider = Tab:CreateSlider({
   Name = "Slider Example",  -- Slider name
   Range = {0, 100},  -- Slider range (min, max)
   Increment = 10,  -- Step increment
   Suffix = "Bananas",  -- Optional suffix
   CurrentValue = 10,  -- Initial slider value
   Flag = "Slider1",  -- Unique flag for saving slider state
   Callback = function(Value)
       -- Action to take when slider value changes
       Rayfield:Notify({
           Title = "Slider Value Changed",
           Content = "The slider value is now " .. Value .. " Bananas.",
           Duration = 4,
           Image = "rbxassetid://6023426938",
       })
   end,
})

Slider:Set(10)  -- Set the slider's value to 10 initially

-- Keybind Example
local Keybind = Tab:CreateKeybind({
   Name = "Keybind Example",  -- Keybind name
   CurrentKeybind = "Q",  -- Default key
   HoldToInteract = false,  -- Set to true if key should be held to interact
   Flag = "Keybind1",  -- Unique flag for saving keybind state
   Callback = function(Keybind)
       -- Action to take when keybind is pressed
       if Keybind then
           Rayfield:Notify({
               Title = "Keybind Pressed",
               Content = "You pressed the keybind!",
               Duration = 4,
               Image = "rbxassetid://6023426938",
           })
       end
   end,
})
