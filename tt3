local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Acceleration Toggle",
    LoadingTitle = "Rayfield UI Library",
    LoadingSubtitle = "Example Script",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "AccelerationScript"
    }
})

local MainTab = Window:CreateTab("Main", 4483362458)

local accelerationEnabled = false
local baseWaitTimer = 0.1
local waitTimer = baseWaitTimer
local accelerationAmount = 1 -- Speed increase per step
local minSpeed = 16 -- Starting speed
local maxSpeed = 50 -- Maximum speed
local moveDirConnection = nil

MainTab:CreateToggle({
    Name = "Enable Acceleration",
    CurrentValue = false,
    Flag = "AccelerationToggle",
    Callback = function(Value)
        accelerationEnabled = Value
        if not accelerationEnabled then
            resetSpeed()
        end
    end,
})

local Player = game.Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local UserInputService = game:GetService("UserInputService")

local function resetSpeed()
    if moveDirConnection then
        moveDirConnection:Disconnect()
        moveDirConnection = nil
    end
    Humanoid.WalkSpeed = minSpeed
    waitTimer = baseWaitTimer
end

local function applyAcceleration()
    if moveDirConnection then moveDirConnection:Disconnect() end

    local moveDirDB = false

    local function accelerate()
        if Humanoid.MoveDirection.magnitude > 0 and not moveDirDB and Humanoid.WalkSpeed < maxSpeed then
            moveDirDB = true
            while Humanoid.MoveDirection.magnitude > 0 and Humanoid.WalkSpeed < maxSpeed do
                Humanoid.WalkSpeed = Humanoid.WalkSpeed + accelerationAmount
                wait(waitTimer)
                waitTimer = waitTimer / 1.5
            end
            moveDirDB = false
        elseif Humanoid.MoveDirection.magnitude == 0 then
            waitTimer = baseWaitTimer
            Humanoid.WalkSpeed = minSpeed
        end
    end

    moveDirConnection = Humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(accelerate)
end

game:GetService("RunService").RenderStepped:Connect(function()
    if accelerationEnabled then
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) or UserInputService:IsKeyDown(Enum.KeyCode.ButtonR2) then
            if not moveDirConnection then
                applyAcceleration()
            end
        else
            resetSpeed()
        end
    end
end)
